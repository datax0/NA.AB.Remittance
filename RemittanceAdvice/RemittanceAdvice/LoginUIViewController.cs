// This file has been autogenerated from a class added in the UI designer.

using System;

using MonoTouch.Foundation;
using MonoTouch.UIKit;
using RemittanceAdvice.ViewModels;
using RemittanceAdvice.Utilities;

namespace RemittanceAdvice
{
	public partial class LoginUIViewController : BaseController
	{
		readonly LoginViewModel loginViewModel;
		TabBarController tabController;

		public LoginUIViewController (IntPtr handle) : base (handle)
		{
			loginViewModel = ServiceContainer.Resolve<LoginViewModel>();

			//Hook up ViewModel events
			//loginViewModel.IsBusyChanged += OnIsBusyChanged;
			//loginViewModel.IsValidChanged += OnIsValidChanged;
		}

		public override void DidReceiveMemoryWarning ()
		{
			// Releases the view if it doesn't have a superview.
			base.DidReceiveMemoryWarning ();

			// Release any cached data, images, etc that aren't in use.
		}

		#region View lifecycle

		public override void ViewDidLoad ()
		{
			base.ViewDidLoad ();

			//Set up any properties on views that must be done from code
			View.BackgroundColor = Theme.LinenPattern;

			//Text Fields
			//I used LeftView as a quick way to add padding to a "plain" styled UITextField
			Username.LeftViewMode = UITextFieldViewMode.Always;
			Username.TextColor = Theme.LabelColor;
			Username.SetDidChangeNotification (text => loginViewModel.Username = text.Text);
			Username.ShouldReturn = _ => {
				Password.BecomeFirstResponder ();
				return false;
			};

			Password.LeftViewMode = UITextFieldViewMode.Always;
			Password.TextColor = Theme.LabelColor;
			Password.SetDidChangeNotification (text => loginViewModel.Password = text.Text);
			Password.ShouldReturn = _ => {
				if (loginViewModel.IsValid) {
					Login (this.LoginButton);
				}
				return false;
			};


		}

		public override void ViewWillAppear (bool animated)
		{
			base.ViewWillAppear (animated);
		}

		public override void ViewDidAppear (bool animated)
		{
			base.ViewDidAppear (animated);
		}

		public override void ViewWillDisappear (bool animated)
		{
			base.ViewWillDisappear (animated);
		}

		public override void ViewDidDisappear (bool animated)
		{
			base.ViewDidDisappear (animated);
		}

		#endregion

		partial void Login (UIButton sender)
		{
			//Dismiss the keyboard
			Username.ResignFirstResponder ();
			Password.ResignFirstResponder ();

			loginViewModel
				.LoginAsync ()
				.ContinueWith (_ => 
					BeginInvokeOnMainThread (() => {
						if (tabController == null)
						{
							//tabController = Storyboard.InstantiateViewController<TabBarController>();
							tabController = (TabBarController)this.Storyboard.InstantiateViewController("TabBarController");
						}
						Theme.TransitionController(tabController);
					}));
		}
	}
}